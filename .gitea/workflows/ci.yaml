name: ci

on: [push]

jobs:
  build_linux:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    # Use container with docker installed
    container: 
      image: catthehacker/ubuntu:act-latest
      volumes:
        # Need to pass /etc/certs through to the custom container
        - /etc/certs:/etc/certs
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: cd ${{ gitea.workspace }}
      - name: Check /etc/certs
        run: ls /etc/certs
      - name: Build
        uses: https://github.com/addnab/docker-run-action@v3
        with:
          image: fir.love.io:3005/amd64/multiarch-gcc1511:latest
          options: --rm --volumes-from=${{ env.JOB_CONTAINER_NAME }}
          run: |
            g++ --version
            aarch64-linux-gnu-g++ --version
            cmake3 --version
            cd ${{ gitea.workspace }}

            ./build.sh --archlist=x86_64,aarch64 --toolchain=./ArmLinux.cmake

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          config-inline: |
            debug = true
            [registry."fir.love.io:3005"]
            ca=["/etc/certs/ca.crt"]      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./stage
          file: ./stage/Dockerfile
          push: true
          tags: fir.love.io:3005/cpp-multiarch:latest, fir.love.io:3005/cpp-multiarch:${{ github.run_number }}
          platforms: linux/amd64,linux/aarch64
      # - name: delete multiarch deployment
      #   uses: steebchen/kubectl@v2.1.1
      #   with:
      #     config: ${{ secrets.KUBE_CONFIG_DATA }}
      #     command: delete -f multiarch.yaml
      # - name: apply multiarch deployment
      #   uses: steebchen/kubectl@v2.1.1
      #   with:
      #     config: ${{ secrets.KUBE_CONFIG_DATA }}
      #     command: apply -f multiarch.yaml

  results:
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: build_linux
    steps:
      - name: Report failure
        if: failure()
        uses: tsickert/discord-webhook@v5.4.0
        with:
          webhook-url: ${{ secrets.WEBHOOK_URL }}
          username: Gitea
          avatar-url: https://about.gitea.com/gitea-text.svg
          content: "Repo ${{ gitea.repository }} branch ${{ gitea.ref }} build :x:"
      - name: Report success
        if: success()
        uses: tsickert/discord-webhook@v5.4.0
        with:
          webhook-url: ${{ secrets.WEBHOOK_URL }}
          username: Gitea
          avatar-url: https://about.gitea.com/gitea-text.svg
          content: "Repo ${{ gitea.repository }} branch ${{ gitea.ref }} build :white_check_mark:"